// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `getSecureConnectBundleUrl` provides a datasource that generates a temporary secure connect bundle URL. This URL lasts five minutes. Secure connect bundles are used to connect to Astra using cql cassandra drivers. See the [docs](https://docs.datastax.com/en/astra/docs/connecting-to-database.html) for more information on how to connect.
func GetSecureConnectBundleUrl(ctx *pulumi.Context, args *GetSecureConnectBundleUrlArgs, opts ...pulumi.InvokeOption) (*GetSecureConnectBundleUrlResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecureConnectBundleUrlResult
	err := ctx.Invoke("astra:index/getSecureConnectBundleUrl:getSecureConnectBundleUrl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecureConnectBundleUrl.
type GetSecureConnectBundleUrlArgs struct {
	// The ID of the Astra database.
	DatabaseId string `pulumi:"databaseId"`
	// The ID of the Astra datacenter. If omitted, all bundles will be fetched.
	DatacenterId *string `pulumi:"datacenterId"`
}

// A collection of values returned by getSecureConnectBundleUrl.
type GetSecureConnectBundleUrlResult struct {
	// The ID of the Astra database.
	DatabaseId string `pulumi:"databaseId"`
	// The ID of the Astra datacenter. If omitted, all bundles will be fetched.
	DatacenterId *string `pulumi:"datacenterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Secure Connect Bundle info
	SecureBundles []GetSecureConnectBundleUrlSecureBundle `pulumi:"secureBundles"`
}

func GetSecureConnectBundleUrlOutput(ctx *pulumi.Context, args GetSecureConnectBundleUrlOutputArgs, opts ...pulumi.InvokeOption) GetSecureConnectBundleUrlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecureConnectBundleUrlResult, error) {
			args := v.(GetSecureConnectBundleUrlArgs)
			r, err := GetSecureConnectBundleUrl(ctx, &args, opts...)
			var s GetSecureConnectBundleUrlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecureConnectBundleUrlResultOutput)
}

// A collection of arguments for invoking getSecureConnectBundleUrl.
type GetSecureConnectBundleUrlOutputArgs struct {
	// The ID of the Astra database.
	DatabaseId pulumi.StringInput `pulumi:"databaseId"`
	// The ID of the Astra datacenter. If omitted, all bundles will be fetched.
	DatacenterId pulumi.StringPtrInput `pulumi:"datacenterId"`
}

func (GetSecureConnectBundleUrlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecureConnectBundleUrlArgs)(nil)).Elem()
}

// A collection of values returned by getSecureConnectBundleUrl.
type GetSecureConnectBundleUrlResultOutput struct{ *pulumi.OutputState }

func (GetSecureConnectBundleUrlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecureConnectBundleUrlResult)(nil)).Elem()
}

func (o GetSecureConnectBundleUrlResultOutput) ToGetSecureConnectBundleUrlResultOutput() GetSecureConnectBundleUrlResultOutput {
	return o
}

func (o GetSecureConnectBundleUrlResultOutput) ToGetSecureConnectBundleUrlResultOutputWithContext(ctx context.Context) GetSecureConnectBundleUrlResultOutput {
	return o
}

// The ID of the Astra database.
func (o GetSecureConnectBundleUrlResultOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecureConnectBundleUrlResult) string { return v.DatabaseId }).(pulumi.StringOutput)
}

// The ID of the Astra datacenter. If omitted, all bundles will be fetched.
func (o GetSecureConnectBundleUrlResultOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecureConnectBundleUrlResult) *string { return v.DatacenterId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecureConnectBundleUrlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecureConnectBundleUrlResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Secure Connect Bundle info
func (o GetSecureConnectBundleUrlResultOutput) SecureBundles() GetSecureConnectBundleUrlSecureBundleArrayOutput {
	return o.ApplyT(func(v GetSecureConnectBundleUrlResult) []GetSecureConnectBundleUrlSecureBundle {
		return v.SecureBundles
	}).(GetSecureConnectBundleUrlSecureBundleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecureConnectBundleUrlResultOutput{})
}
