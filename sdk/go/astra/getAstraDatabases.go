// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `getAstraDatabases` provides a datasource for a list of Astra databases. This can be used to select databases within your Astra Organization.
func LookupAstraDatabases(ctx *pulumi.Context, args *LookupAstraDatabasesArgs, opts ...pulumi.InvokeOption) (*LookupAstraDatabasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAstraDatabasesResult
	err := ctx.Invoke("astra:index/getAstraDatabases:getAstraDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAstraDatabases.
type LookupAstraDatabasesArgs struct {
	// The cloud provider
	CloudProvider *string `pulumi:"cloudProvider"`
	// Status flter. Only return databases with matching status, if supplied. Otherwise return all databases matching other requirements
	Status *string `pulumi:"status"`
}

// A collection of values returned by getAstraDatabases.
type LookupAstraDatabasesResult struct {
	// The cloud provider
	CloudProvider *string `pulumi:"cloudProvider"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of Astra databases that match the search criteria.
	Results []GetAstraDatabasesResult `pulumi:"results"`
	// Status flter. Only return databases with matching status, if supplied. Otherwise return all databases matching other requirements
	Status *string `pulumi:"status"`
}

func LookupAstraDatabasesOutput(ctx *pulumi.Context, args LookupAstraDatabasesOutputArgs, opts ...pulumi.InvokeOption) LookupAstraDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAstraDatabasesResult, error) {
			args := v.(LookupAstraDatabasesArgs)
			r, err := LookupAstraDatabases(ctx, &args, opts...)
			var s LookupAstraDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAstraDatabasesResultOutput)
}

// A collection of arguments for invoking getAstraDatabases.
type LookupAstraDatabasesOutputArgs struct {
	// The cloud provider
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
	// Status flter. Only return databases with matching status, if supplied. Otherwise return all databases matching other requirements
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupAstraDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAstraDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getAstraDatabases.
type LookupAstraDatabasesResultOutput struct{ *pulumi.OutputState }

func (LookupAstraDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAstraDatabasesResult)(nil)).Elem()
}

func (o LookupAstraDatabasesResultOutput) ToLookupAstraDatabasesResultOutput() LookupAstraDatabasesResultOutput {
	return o
}

func (o LookupAstraDatabasesResultOutput) ToLookupAstraDatabasesResultOutputWithContext(ctx context.Context) LookupAstraDatabasesResultOutput {
	return o
}

// The cloud provider
func (o LookupAstraDatabasesResultOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAstraDatabasesResult) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAstraDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAstraDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of Astra databases that match the search criteria.
func (o LookupAstraDatabasesResultOutput) Results() GetAstraDatabasesResultArrayOutput {
	return o.ApplyT(func(v LookupAstraDatabasesResult) []GetAstraDatabasesResult { return v.Results }).(GetAstraDatabasesResultArrayOutput)
}

// Status flter. Only return databases with matching status, if supplied. Otherwise return all databases matching other requirements
func (o LookupAstraDatabasesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAstraDatabasesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAstraDatabasesResultOutput{})
}
