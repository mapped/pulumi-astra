// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `astra.getStreamingTenantTokens` provides a datasource that lists streaming tenant tokens.
 */
export function getStreamingTenantTokens(args: GetStreamingTenantTokensArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingTenantTokensResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("astra:index/getStreamingTenantTokens:getStreamingTenantTokens", {
        "clusterName": args.clusterName,
        "tenantName": args.tenantName,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensArgs {
    /**
     * Name of the Pulsar Cluster. Format: `pulsar-<cloud provider>-<cloud region>`. Example: `pulsar-gcp-useast1`
     */
    clusterName: string;
    /**
     * Name of the streaming tenant for which to fetch tokens.
     */
    tenantName: string;
}

/**
 * A collection of values returned by getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensResult {
    /**
     * Name of the Pulsar Cluster. Format: `pulsar-<cloud provider>-<cloud region>`. Example: `pulsar-gcp-useast1`
     */
    readonly clusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the streaming tenant for which to fetch tokens.
     */
    readonly tenantName: string;
    /**
     * The list of tokens for the specified tenant.
     */
    readonly tokens: outputs.GetStreamingTenantTokensToken[];
}

export function getStreamingTenantTokensOutput(args: GetStreamingTenantTokensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamingTenantTokensResult> {
    return pulumi.output(args).apply(a => getStreamingTenantTokens(a, opts))
}

/**
 * A collection of arguments for invoking getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensOutputArgs {
    /**
     * Name of the Pulsar Cluster. Format: `pulsar-<cloud provider>-<cloud region>`. Example: `pulsar-gcp-useast1`
     */
    clusterName: pulumi.Input<string>;
    /**
     * Name of the streaming tenant for which to fetch tokens.
     */
    tenantName: pulumi.Input<string>;
}
