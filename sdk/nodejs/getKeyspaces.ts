// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `astra.getKeyspaces` provides a datasource that lists the keyspaces in an Astra database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astra from "@pulumi/astra";
 *
 * const dev = pulumi.output(astra.getKeyspaces({
 *     databaseId: "f9f4b1e0-4c05-451e-9bba-d631295a7f73",
 * }));
 * ```
 */
export function getKeyspaces(args: GetKeyspacesArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyspacesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("astra:index/getKeyspaces:getKeyspaces", {
        "databaseId": args.databaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeyspaces.
 */
export interface GetKeyspacesArgs {
    /**
     * The ID of the Astra database.
     */
    databaseId: string;
}

/**
 * A collection of values returned by getKeyspaces.
 */
export interface GetKeyspacesResult {
    /**
     * The ID of the Astra database.
     */
    readonly databaseId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of keyspaces that match the search criteria.
     */
    readonly results: outputs.GetKeyspacesResult[];
}

export function getKeyspacesOutput(args: GetKeyspacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyspacesResult> {
    return pulumi.output(args).apply(a => getKeyspaces(a, opts))
}

/**
 * A collection of arguments for invoking getKeyspaces.
 */
export interface GetKeyspacesOutputArgs {
    /**
     * The ID of the Astra database.
     */
    databaseId: pulumi.Input<string>;
}
