// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Astra.Outputs
{

    [OutputType]
    public sealed class GetAstraDatabasesResultResult
    {
        public readonly ImmutableArray<string> AdditionalKeyspaces;
        /// <summary>
        /// The cloud provider
        /// </summary>
        public readonly string CloudProvider;
        public readonly string CqlshUrl;
        public readonly string DataEndpointUrl;
        public readonly ImmutableDictionary<string, string> Datacenters;
        public readonly string GrafanaUrl;
        public readonly string GraphqlUrl;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Keyspace;
        public readonly string Name;
        public readonly int NodeCount;
        public readonly string OrganizationId;
        public readonly string OwnerId;
        public readonly ImmutableArray<string> Regions;
        public readonly int ReplicationFactor;
        /// <summary>
        /// Status flter. Only return databases with matching status, if supplied. Otherwise return all databases matching other requirements
        /// </summary>
        public readonly string Status;
        public readonly int TotalStorage;

        [OutputConstructor]
        private GetAstraDatabasesResultResult(
            ImmutableArray<string> additionalKeyspaces,

            string cloudProvider,

            string cqlshUrl,

            string dataEndpointUrl,

            ImmutableDictionary<string, string> datacenters,

            string grafanaUrl,

            string graphqlUrl,

            string id,

            string keyspace,

            string name,

            int nodeCount,

            string organizationId,

            string ownerId,

            ImmutableArray<string> regions,

            int replicationFactor,

            string status,

            int totalStorage)
        {
            AdditionalKeyspaces = additionalKeyspaces;
            CloudProvider = cloudProvider;
            CqlshUrl = cqlshUrl;
            DataEndpointUrl = dataEndpointUrl;
            Datacenters = datacenters;
            GrafanaUrl = grafanaUrl;
            GraphqlUrl = graphqlUrl;
            Id = id;
            Keyspace = keyspace;
            Name = name;
            NodeCount = nodeCount;
            OrganizationId = organizationId;
            OwnerId = ownerId;
            Regions = regions;
            ReplicationFactor = replicationFactor;
            Status = status;
            TotalStorage = totalStorage;
        }
    }
}
