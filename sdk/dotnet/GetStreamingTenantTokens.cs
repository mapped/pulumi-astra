// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Astra
{
    public static class GetStreamingTenantTokens
    {
        /// <summary>
        /// `astra.getStreamingTenantTokens` provides a datasource that lists streaming tenant tokens.
        /// </summary>
        public static Task<GetStreamingTenantTokensResult> InvokeAsync(GetStreamingTenantTokensArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStreamingTenantTokensResult>("astra:index/getStreamingTenantTokens:getStreamingTenantTokens", args ?? new GetStreamingTenantTokensArgs(), options.WithDefaults());

        /// <summary>
        /// `astra.getStreamingTenantTokens` provides a datasource that lists streaming tenant tokens.
        /// </summary>
        public static Output<GetStreamingTenantTokensResult> Invoke(GetStreamingTenantTokensInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStreamingTenantTokensResult>("astra:index/getStreamingTenantTokens:getStreamingTenantTokens", args ?? new GetStreamingTenantTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamingTenantTokensArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Pulsar Cluster. Format: `pulsar-&lt;cloud provider&gt;-&lt;cloud region&gt;`. Example: `pulsar-gcp-useast1`
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the streaming tenant for which to fetch tokens.
        /// </summary>
        [Input("tenantName", required: true)]
        public string TenantName { get; set; } = null!;

        public GetStreamingTenantTokensArgs()
        {
        }
        public static new GetStreamingTenantTokensArgs Empty => new GetStreamingTenantTokensArgs();
    }

    public sealed class GetStreamingTenantTokensInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Pulsar Cluster. Format: `pulsar-&lt;cloud provider&gt;-&lt;cloud region&gt;`. Example: `pulsar-gcp-useast1`
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Name of the streaming tenant for which to fetch tokens.
        /// </summary>
        [Input("tenantName", required: true)]
        public Input<string> TenantName { get; set; } = null!;

        public GetStreamingTenantTokensInvokeArgs()
        {
        }
        public static new GetStreamingTenantTokensInvokeArgs Empty => new GetStreamingTenantTokensInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamingTenantTokensResult
    {
        /// <summary>
        /// Name of the Pulsar Cluster. Format: `pulsar-&lt;cloud provider&gt;-&lt;cloud region&gt;`. Example: `pulsar-gcp-useast1`
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the streaming tenant for which to fetch tokens.
        /// </summary>
        public readonly string TenantName;
        /// <summary>
        /// The list of tokens for the specified tenant.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamingTenantTokensTokenResult> Tokens;

        [OutputConstructor]
        private GetStreamingTenantTokensResult(
            string clusterName,

            string id,

            string tenantName,

            ImmutableArray<Outputs.GetStreamingTenantTokensTokenResult> tokens)
        {
            ClusterName = clusterName;
            Id = id;
            TenantName = tenantName;
            Tokens = tokens;
        }
    }
}
