// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Astra
{
    public static class GetUsers
    {
        /// <summary>
        /// `astra.getUsers` provides a datasource for a list of Astra users. This can be used to select users within your Astra Organization.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Astra = Pulumi.Astra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dev = Astra.GetUsers.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("astra:index/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithDefaults());

        /// <summary>
        /// `astra.getUsers` provides a datasource for a list of Astra users. This can be used to select users within your Astra Organization.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Astra = Pulumi.Astra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dev = Astra.GetUsers.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUsersResult> Invoke(GetUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUsersResult>("astra:index/getUsers:getUsers", args ?? new GetUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization Name.
        /// </summary>
        [Input("orgName")]
        public string? OrgName { get; set; }

        public GetUsersArgs()
        {
        }
        public static new GetUsersArgs Empty => new GetUsersArgs();
    }

    public sealed class GetUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization Name.
        /// </summary>
        [Input("orgName")]
        public Input<string>? OrgName { get; set; }

        public GetUsersInvokeArgs()
        {
        }
        public static new GetUsersInvokeArgs Empty => new GetUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Organization ID.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// Organization Name.
        /// </summary>
        public readonly string? OrgName;
        /// <summary>
        /// The list of Astra users.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersUserResult> Users;

        [OutputConstructor]
        private GetUsersResult(
            string id,

            string orgId,

            string? orgName,

            ImmutableArray<Outputs.GetUsersUserResult> users)
        {
            Id = id;
            OrgId = orgId;
            OrgName = orgName;
            Users = users;
        }
    }
}
