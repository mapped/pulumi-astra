// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Astra
{
    public static class GetAccessList
    {
        /// <summary>
        /// `astra.AccessList` provides a datasource that lists the access lists for an Astra database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Astra = Pulumi.Astra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dev = Astra.GetAccessList.Invoke(new()
        ///     {
        ///         DatabaseId = "8d356587-73b3-430a-9c0e-d780332e2afb",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccessListResult> InvokeAsync(GetAccessListArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccessListResult>("astra:index/getAccessList:getAccessList", args ?? new GetAccessListArgs(), options.WithDefaults());

        /// <summary>
        /// `astra.AccessList` provides a datasource that lists the access lists for an Astra database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Astra = Pulumi.Astra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dev = Astra.GetAccessList.Invoke(new()
        ///     {
        ///         DatabaseId = "8d356587-73b3-430a-9c0e-d780332e2afb",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccessListResult> Invoke(GetAccessListInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAccessListResult>("astra:index/getAccessList:getAccessList", args ?? new GetAccessListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessListArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        [Input("databaseId", required: true)]
        public string DatabaseId { get; set; } = null!;

        public GetAccessListArgs()
        {
        }
        public static new GetAccessListArgs Empty => new GetAccessListArgs();
    }

    public sealed class GetAccessListInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        public GetAccessListInvokeArgs()
        {
        }
        public static new GetAccessListInvokeArgs Empty => new GetAccessListInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessListResult
    {
        /// <summary>
        /// Addresses in the access list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessListAddressResult> Addresses;
        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        public readonly string DatabaseId;
        /// <summary>
        /// The Access list is enabled or disabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccessListResult(
            ImmutableArray<Outputs.GetAccessListAddressResult> addresses,

            string databaseId,

            bool enabled,

            string id)
        {
            Addresses = addresses;
            DatabaseId = databaseId;
            Enabled = enabled;
            Id = id;
        }
    }
}
