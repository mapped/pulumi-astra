// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Astra
{
    /// <summary>
    /// `astra.AccessList` resource represents a database access list, used to limit the ip's / CIDR groups that have access to a database.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Astra = Pulumiverse.Astra;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Astra.AccessList("example", new()
    ///     {
    ///         Addresses = new[]
    ///         {
    ///             new Astra.Inputs.AccessListAddressArgs
    ///             {
    ///                 Address = "0.0.0.1/0",
    ///                 Enabled = true,
    ///             },
    ///             new Astra.Inputs.AccessListAddressArgs
    ///             {
    ///                 Address = "0.0.0.2/0",
    ///                 Enabled = true,
    ///             },
    ///             new Astra.Inputs.AccessListAddressArgs
    ///             {
    ///                 Address = "0.0.0.3/0",
    ///                 Enabled = true,
    ///             },
    ///         },
    ///         DatabaseId = "a6bc9c26-e7ce-424f-84c7-0a00afb12588",
    ///         Enabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// # the import id should be the database_id.
    /// 
    /// ```sh
    ///  $ pulumi import astra:index/accessList:AccessList example a6bc9c26-e7ce-424f-84c7-0a00afb12588
    /// ```
    /// </summary>
    [AstraResourceType("astra:index/accessList:AccessList")]
    public partial class AccessList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of address requests that should have access to database endpoints.
        /// </summary>
        [Output("addresses")]
        public Output<ImmutableArray<Outputs.AccessListAddress>> Addresses { get; private set; } = null!;

        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// Public access restrictions enabled or disabled
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;


        /// <summary>
        /// Create a AccessList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessList(string name, AccessListArgs args, CustomResourceOptions? options = null)
            : base("astra:index/accessList:AccessList", name, args ?? new AccessListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessList(string name, Input<string> id, AccessListState? state = null, CustomResourceOptions? options = null)
            : base("astra:index/accessList:AccessList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessList Get(string name, Input<string> id, AccessListState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessList(name, id, state, options);
        }
    }

    public sealed class AccessListArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses", required: true)]
        private InputList<Inputs.AccessListAddressArgs>? _addresses;

        /// <summary>
        /// List of address requests that should have access to database endpoints.
        /// </summary>
        public InputList<Inputs.AccessListAddressArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.AccessListAddressArgs>());
            set => _addresses = value;
        }

        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        /// <summary>
        /// Public access restrictions enabled or disabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public AccessListArgs()
        {
        }
        public static new AccessListArgs Empty => new AccessListArgs();
    }

    public sealed class AccessListState : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        private InputList<Inputs.AccessListAddressGetArgs>? _addresses;

        /// <summary>
        /// List of address requests that should have access to database endpoints.
        /// </summary>
        public InputList<Inputs.AccessListAddressGetArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.AccessListAddressGetArgs>());
            set => _addresses = value;
        }

        /// <summary>
        /// The ID of the Astra database.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// Public access restrictions enabled or disabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public AccessListState()
        {
        }
        public static new AccessListState Empty => new AccessListState();
    }
}
